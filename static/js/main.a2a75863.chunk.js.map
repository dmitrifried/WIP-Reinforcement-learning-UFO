{"version":3,"sources":["Game/ship.js","Game/Game.jsx","App.js","serviceWorker.js","index.js"],"names":["Ship","two","x","y","this","baseX","baseY","lf","rf","base","Two","Ellipse","shipRadius","fill","cockpit","ArcSegment","Math","PI","leftFlameTip","Anchor","leftFlameAnchors","lFlame","Path","rFlame","clone","rightFlameTip","vertices","forEach","v","group","makeGroup","add","translation","set","leftEngine","rightEngine","Vector","aV","rotation","deltaT","a","acceleration","aA","angularAcceleration","addSelf","multiplyScalar","p","max","minX","min","maxX","minY","maxY","velocityDecay","angularDecay","pos","height","width","theta","le","re","engineMult","engineForce","ay","gravity","sin","ax","cos","engineTorque","autostart","makePath","makeLine","ship","Game","props","ref","useRef","useState","stopped","setStopped","useEffect","console","log","appendTo","current","play","onClick","e","preventDefault","reset","bind","frameCount","applyPhysics","unbind","style","border","display","document","addEventListener","keyCode","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a2a75863.chunk.js","sourcesContent":["import Two from \"two.js\";\r\n\r\nexport default class Ship {\r\n  constructor({ two, x, y }) {\r\n    const cockpitRadius = 15;\r\n    const shipRadius = 30;\r\n    [this.baseX, this.baseY] = [0, 0];\r\n    const lf = { x: this.baseX - cockpitRadius, y: this.baseY + 8 };\r\n    const rf = { x: this.baseX + cockpitRadius, y: this.baseY + 8 };\r\n\r\n    this.two = two;\r\n\r\n    let base = new Two.Ellipse(this.baseX, this.baseY, shipRadius, shipRadius / 3.0);\r\n    base.fill = \"#AAAAAA\";\r\n\r\n    let cockpit = new Two.ArcSegment(this.baseX, this.baseY, 0, cockpitRadius, -Math.PI, 0);\r\n    cockpit.fill = \"#DDDDDD\";\r\n\r\n    this.leftFlameTip = new Two.Anchor(lf.x, lf.y + 15);\r\n    let leftFlameAnchors = [\r\n      new Two.Anchor(lf.x - 5, lf.y),\r\n      this.leftFlameTip,\r\n      new Two.Anchor(lf.x + 5, lf.y),\r\n    ];\r\n    let lFlame = new Two.Path(leftFlameAnchors, false, false);\r\n    lFlame.fill = \"Red\";\r\n\r\n    let rFlame = lFlame.clone();\r\n    this.rightFlameTip = rFlame.vertices[1];\r\n    rFlame.vertices.forEach((v) => {\r\n      v.x += rf.x - lf.x;\r\n    });\r\n\r\n    // let flameGroup = new Two.Group(lFlame, rFlame);\r\n    // let bodyGroup = new Two.Group(base, cockpit);\r\n    this.group = two.makeGroup(lFlame, rFlame, base, cockpit); // flameGroup, bodyGroup);\r\n\r\n    two.add(this.group);\r\n\r\n    this.group.translation.set(x, y);\r\n    this.leftEngine = true;\r\n    this.rightEngine = true;\r\n    this.v = new Two.Vector(0, 0);\r\n    this.aV = 0;\r\n  }\r\n\r\n  reset(x, y) {\r\n    this.group.translation.set(x, y);\r\n    this.group.rotation = 0;\r\n    this.v.set(0, 0);\r\n    this.aV = 0;\r\n    this.leftEngine = true;\r\n    this.rightEngine = true;\r\n  }\r\n\r\n  get theta() {\r\n    return this.group.rotation - Math.PI / 2.0;\r\n  }\r\n\r\n  get state() {\r\n    return {\r\n      pos: this.group.translation,\r\n      v: this.v,\r\n      aV: this.aV,\r\n    };\r\n  }\r\n\r\n  get gravity() {\r\n    return 300.0;\r\n  }\r\n\r\n  get engineForce() {\r\n    return 250.0;\r\n  }\r\n\r\n  get engineTorque() {\r\n    return 0.1;\r\n  }\r\n\r\n  get velocityDecay() {\r\n    return 0.2;\r\n  }\r\n\r\n  get angularDecay() {\r\n    return 0.2;\r\n  }\r\n\r\n  get maxY() {\r\n    return this.two.height - 20;\r\n  }\r\n\r\n  get maxX() {\r\n    return this.two.width - 20;\r\n  }\r\n\r\n  get minY() {\r\n    return 20;\r\n  }\r\n\r\n  get minX() {\r\n    return 20;\r\n  }\r\n\r\n  /** @returns Two.Vector(ax, ay) */\r\n  get acceleration() {\r\n    let theta = this.theta;\r\n    let [le, re] = [this.le, this.re];\r\n    let engineMult = ((le ? 1 : 0) + (re ? 1 : 0)) * this.engineForce;\r\n    let ay = this.gravity + engineMult * Math.sin(theta);\r\n    let ax = engineMult * Math.cos(theta);\r\n    return new Two.Vector(ax, ay);\r\n  }\r\n\r\n  get angularAcceleration() {\r\n    let [le, re] = [this.leftEngine, this.rightEngine];\r\n    if (le && !re) {\r\n      return this.engineTorque;\r\n    } else if (!le && re) {\r\n      return -this.engineTorque;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  get le() {\r\n    return this.leftEngine;\r\n  }\r\n\r\n  get re() {\r\n    return this.rightEngine;\r\n  }\r\n\r\n  set le(leftEngine) {\r\n    this.leftEngine = leftEngine;\r\n    this.leftFlameTip.y = leftEngine ? this.baseY + 23 : this.baseY;\r\n  }\r\n\r\n  set re(rightEngine) {\r\n    this.rightEngine = rightEngine;\r\n    this.rightFlameTip.y = rightEngine ? this.baseY + 23 : this.baseY;\r\n  }\r\n\r\n  applyPhysics(deltaT) {\r\n    deltaT = deltaT / 1000.0;\r\n    if (deltaT > 1) {\r\n      return;\r\n    }\r\n\r\n    // y is inverted\r\n    let a = this.acceleration;\r\n    let aA = this.angularAcceleration;\r\n\r\n    this.group.translation.addSelf(a.clone().multiplyScalar(deltaT));\r\n    let p = this.group.translation.clone();\r\n    p.x = Math.max(this.minX, Math.min(p.x, this.maxX));\r\n    p.y = Math.max(this.minY, Math.min(p.y, this.maxY));\r\n\r\n    this.group.translation = p;\r\n    this.group.rotation += this.aV * deltaT;\r\n\r\n    this.v.multiplyScalar(1 - deltaT * this.velocityDecay);\r\n    this.v.addSelf(a.multiplyScalar(deltaT));\r\n\r\n    this.aV *= 1 - deltaT * this.angularDecay;\r\n    this.aV += aA;\r\n  }\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Two from \"two.js\";\r\nimport Ship from \"./ship.js\";\r\n\r\nconst two = new Two({ height: 500, width: 800, autostart: true });\r\nlet leftWall = two.makePath(15, 480, 15, 0, 0, 0, 0, 500)\r\nleftWall.fill = \"#eeeeee\"\r\nlet floor = two.makePath(15, 480, 800, 480, 800, 500, 0, 500);\r\nfloor.fill = \"#cccccc\"\r\ntwo.makeLine(390, 240, 410, 260);\r\ntwo.makeLine(410, 240, 390, 260);\r\nconst ship = new Ship({ two: two, x: 100, y: 100 });\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  switch (e.keyCode) {\r\n    case 37: // left\r\n      e.preventDefault();\r\n      ship.le = !ship.le;\r\n      break;\r\n    case 39: // right\r\n      e.preventDefault();\r\n      ship.re = !ship.re;\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n});\r\n\r\ntwo.bind(\"update\", (frameCount, deltaT) => {\r\n  ship.applyPhysics(deltaT);\r\n});\r\n\r\nexport default function Game(props) {\r\n  const ref = useRef(null);\r\n\r\n  const [stopped, setStopped] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(ship);\r\n    if (two) {\r\n      two.appendTo(ref.current);\r\n      two.play();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          ship.reset(100, 100);\r\n          if (stopped) {\r\n            two.bind(\"update\", (frameCount, deltaT) => {\r\n              ship.applyPhysics(deltaT);\r\n            });\r\n            setStopped(false);\r\n          }\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n      <button\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          if (stopped) {\r\n            two.bind(\"update\", (frameCount, deltaT) => {\r\n              ship.applyPhysics(deltaT);\r\n            });\r\n            setStopped(false);\r\n          } else {\r\n            two.unbind(\"update\");\r\n            setStopped(true);\r\n          }\r\n        }}\r\n      >\r\n        {stopped ? \"Start\" : \"Stop\"}\r\n      </button>\r\n      <p>Use ← and → to turn on the left and right engines. Aim for the X.</p>\r\n      <br/>\r\n      <div ref={ref} style={{ border: \"solid\", display: \"inline-block\" }} />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Game from './Game/Game';\r\n\r\nfunction App() {  \r\n  return (\r\n    <Game />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}